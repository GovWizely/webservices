%p
  %b Name:
  = @data_source.name
%p
  %b Description:
  = @data_source.description
%p
  %b Api:
  = @data_source.api
%p
  %b Published:
  = @data_source.published
%p
  %b Version:
  = @data_source.version_number
- if @data_source.is_consolidated?
  %p
    %b Consolidated Data Sources:
    %table
      %tr
        %th Source
        %th API
        %th V
        %th Last Updated
        %th Last Imported
        %th Sample API Call
        %th API Page
      - @data_source.sources_map.each do |source, data_source|
        %tr
          %td= source
          %td= data_source.api
          %td= data_source.version_number
          %td= time_ago_in_words(data_source.data_changed_at)
          %td= time_ago_in_words(data_source.data_imported_at)
          %td= sample_api_call(data_source)
          %td= link_to('admin', data_source_path(data_source) )
    %p Use the param `sources` to search across multiple sources (plural) separated by commas.
    %hr
- else
  %p
    %b Url:
    = link_to @data_source.url, @data_source.url
  %p
    %b Data Last Imported:
    = @data_source.data_imported_at
    (
    = time_ago_in_words(@data_source.data_imported_at)
    ago )
  %p
    %b Data Last Changed:
    = @data_source.data_changed_at
    (
    = time_ago_in_words(@data_source.data_changed_at)
    ago )
  - if @data_source.singular_filter_fields.attributes.present?
    %p
      %b Singular Filtered Fields:
      = param_table(@data_source.singular_filter_fields.attributes)
      %hr
  - if @data_source.plural_filter_fields.attributes.present?
    %p
      %b Plural Filtered Fields:
      = param_table(@data_source.pluralized_filter_fields.attributes)
      %p
        Filter on multiple values by passing in a comma-separated list (e.g.,
        %i FR,US,DE
        )
      %hr
  - if @data_source.fulltext_fields.attributes.present?
    %p
      %b Fulltext Fields :
      = param_table(@data_source.fulltext_fields.attributes)
      %p Use the param `q` to search across all fulltext fields
      %hr
  - if @data_source.date_fields.attributes.present?
    %p
      %b Date Range Fields:
      = param_table(@data_source.date_fields.attributes)
      %p Specify a date range in this format (e.g., 2013-10-01+TO+2015-10-04)
      %hr
%p
  %b API call showing the first page of available data:
  = sample_api_call @data_source

- if @data_source.newest_version?
  = link_to 'Iterate API Version', iterate_version_data_source_path(@data_source)
  \|
  = link_to 'Edit', edit_data_source_path(@data_source)
  \|
= link_to 'Back', "/"
- if @data_source.oldest_version? || @data_source.newest_version?
  = button_to 'Delete', data_source_path(@data_source), method: :delete, data: { confirm: 'Are you sure you wish to delete this API and data source?' }